/*
This software was created by United States Government employees at 
The Center for Cybersecurity and Cyber Operations (C3O) 
at the Naval Postgraduate School NPS.  Please note that within the 
United States, copyright protection is not available for any works 
created  by United States Government employees, pursuant to Title 17 
United States Code Section 105.   This software is in the public 
domain and is not subject to copyright. 
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
 */
package labtainers.paramsui;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JDialog;
import labtainers.mainui.ToolTipHandlers.ToolTipWrapper;
import labtainers.mainui.ToolTipHandlers.ToolTipWrapper;
import static labtainers.mainui.ToolTipHandlers.setComboItems;
import static labtainers.resultsui.ParamReferenceStorage.Operator_ITEMS;
import labtainers.resultsui.ParamReferenceStorage;
import labtainers.goalsui.DocPanel;

/**
 *
 */
public class ParamPanels extends javax.swing.JPanel {

    static Dimension dim = new Dimension(975, 100);
    ParamsUI uiParam;
    ParamsData dataUI;
    int rowNum;
    String comments="";
    
    /**
     * Creates new form ParamsPanel
     */
    //Creating fresh params line
    public ParamPanels(ParamsUI ui, int rowNum) {
        initComponents();
        this.uiParam = ui;
        this.dataUI = ui.data;
        this.rowNum = rowNum;
        
        jLabel3.setText(Integer.toString(rowNum));
        LowerBoundTextField.setVisible(false);
                
        setComboItems(OperationComboBox, Operator_ITEMS);
    }

    //Loading params line
    public ParamPanels(ParamsUI ui, int rowNum, String paramID, ArrayList<String> fileList, 
              String operator, String symbol, 
              String hashedString, String upperBound, String lowerBound, String step, String comments){
        initComponents();
        this.uiParam = ui;
        this.dataUI = ui.data;
        this.rowNum = rowNum;
        this.comments = comments;
        jLabel3.setText(Integer.toString(rowNum));      
        
        setComboItems(OperationComboBox, Operator_ITEMS);
        
        //Set Values
        setOperatorComboBox(operator);
        setParamIDTextField(paramID);
        String file_list = String.join(";", fileList);
        setFileTextField(file_list);        
        setSymbolTextField(symbol);        
        setHashedStringTextField(hashedString);        
        setUpperBoundTextField(upperBound);        
        setLowerBoundTextField(lowerBound);        
        setStepTextField(step);        
 
        this.revalidate();
        this.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        UpButton = new javax.swing.JButton();
        DownButton = new javax.swing.JButton();
        ParamPanel = new javax.swing.JPanel();
        ParamIDTextField = new javax.swing.JTextField();
        OperationComboBox = new javax.swing.JComboBox<>();
        FileNameTextField = new javax.swing.JTextField();
        SymbolTextField = new javax.swing.JTextField();
        LowerBoundTextField = new javax.swing.JTextField();
        UpperBoundTextField = new javax.swing.JTextField();
        HashedStringTextField = new javax.swing.JTextField();
        ShowListButton = new javax.swing.JButton();
        stepTextField = new javax.swing.JTextField();
        DocButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(1560, 86));
        setMinimumSize(new java.awt.Dimension(1560, 86));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1580, 86));

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 48)); // NOI18N
        jLabel3.setText("10");

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        UpButton.setFont(new java.awt.Font("Ubuntu Condensed", 0, 12)); // NOI18N
        UpButton.setText("^");
        UpButton.setMaximumSize(new java.awt.Dimension(19, 50));
        UpButton.setMinimumSize(new java.awt.Dimension(19, 31));
        UpButton.setPreferredSize(new java.awt.Dimension(19, 31));
        UpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpButtonActionPerformed(evt);
            }
        });

        DownButton.setFont(new java.awt.Font("Ubuntu Condensed", 0, 12)); // NOI18N
        DownButton.setText("v");
        DownButton.setToolTipText("");
        DownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownButtonActionPerformed(evt);
            }
        });

        ParamPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        OperationComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OperationComboBoxItemStateChanged(evt);
            }
        });
        OperationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperationComboBoxActionPerformed(evt);
            }
        });

        FileNameTextField.setToolTipText("<html>Name of the file containing parameterized data.</html>");
        FileNameTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "File name"));

        SymbolTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        SymbolTextField.setToolTipText("<html>Symbol within the  file that is to be replaced, e.g., with a hash or a random value.</html>");
        SymbolTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Symbol"));

        LowerBoundTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LowerBoundTextField.setToolTipText("Lower bound of random value.");
        LowerBoundTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lower bound"));
        LowerBoundTextField.setMinimumSize(new java.awt.Dimension(20, 100));

        UpperBoundTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        UpperBoundTextField.setToolTipText("Upper bound of random value.");
        UpperBoundTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Upper bound"));
        UpperBoundTextField.setMinimumSize(new java.awt.Dimension(20, 100));

        HashedStringTextField.setToolTipText("String to be hashed.");
        HashedStringTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hashed string"));

        ShowListButton.setText("jButton1");
        ShowListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowListButtonActionPerformed(evt);
            }
        });

        stepTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        stepTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Step"));
        stepTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ParamPanelLayout = new javax.swing.GroupLayout(ParamPanel);
        ParamPanel.setLayout(ParamPanelLayout);
        ParamPanelLayout.setHorizontalGroup(
            ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ParamIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(OperationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(FileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ShowListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(SymbolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LowerBoundTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UpperBoundTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stepTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HashedStringTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ParamPanelLayout.setVerticalGroup(
            ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamPanelLayout.createSequentialGroup()
                .addGroup(ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ParamPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ParamIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(OperationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LowerBoundTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SymbolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(UpperBoundTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(stepTextField)
                                .addComponent(HashedStringTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(ShowListButton)
                    .addComponent(FileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        DocButton.setText("Doc");
        DocButton.setToolTipText("Document this parameter.");
        DocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(ParamPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeleteButton)
                    .addComponent(DocButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ParamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DownButton)
                    .addComponent(DocButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpButtonActionPerformed
         swapUpdate("UP", rowNum-1); //Subtract rowNum by one to get the proper index number
    }//GEN-LAST:event_UpButtonActionPerformed

    private void DownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownButtonActionPerformed
         swapUpdate("DOWN", rowNum-1); //Subtract rowNum by one to get the proper index number
    }//GEN-LAST:event_DownButtonActionPerformed

    private void OperationComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OperationComboBoxItemStateChanged
        operatorListener();
    }//GEN-LAST:event_OperationComboBoxItemStateChanged

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        deleteButton();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void OperationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperationComboBoxActionPerformed
        //operatorListener();
    }//GEN-LAST:event_OperationComboBoxActionPerformed

    private void DocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocButtonActionPerformed
        DocPanel panel = new DocPanel();

        panel.setDoc(this.comments);
        //panel.setVisible(true);
        JDialog dialog = new JDialog();
        panel.setDialog(dialog);
        //dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setModal(true);
        dialog.add(panel);
        dialog.pack();
        dialog.setLocation(200, 200);
        dialog.setTitle("Documentation for "+ParamIDTextField.getText());
        dialog.setVisible(true);
        if(panel.isOK()){
            this.comments = panel.getDoc();
        }
    }//GEN-LAST:event_DocButtonActionPerformed

    private void ShowListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowListButtonActionPerformed
        String file_list = getFileTextField().getText();
        String fileArray[] = file_list.split(";");
        List<String> list = new ArrayList<String>();
	list = Arrays.asList(fileArray);
        ArrayList<String> fileList = new ArrayList<String>(list); 
        ContainerFileDialog panel = new ContainerFileDialog(this.dataUI.getContainerList(), fileList);

        //panel.tableSetup();
        panel.setOpaque(true);
        JDialog dialog = new JDialog();
        panel.setDialog(dialog);
        //dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setModal(true);
        dialog.add(panel);
        dialog.pack();
        dialog.setLocation(200, 200);
        dialog.setTitle("Files to modify");
        dialog.setVisible(true);
        if(panel.isOK()){
            System.out.println("is ok ");
            fileList = panel.getFileList();
            file_list = String.join(";", fileList);
            setFileTextField(file_list);
        }
        dialog.dispose();
    }//GEN-LAST:event_ShowListButtonActionPerformed

    private void stepTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stepTextFieldActionPerformed
    
    private void deleteButton(){
       JPanel panelOfParams = (JPanel)this.getParent();
       panelOfParams.remove(this);
       uiParam.data.rowCount--;
       uiParam.refresh();
    }
    private void operatorListener(){  
        ToolTipWrapper operator = (ToolTipWrapper)OperationComboBox.getSelectedItem();
        if(operator == null){
            return;
        }
        //adjustToolTip(operator.getItem()); 
        String op_string = operator.getItem();
        if(op_string.contains("RAND")){
            LowerBoundTextField.setVisible(true); 
            UpperBoundTextField.setVisible(true); 
            stepTextField.setVisible(true); 
        }else{
            LowerBoundTextField.setVisible(false); 
            UpperBoundTextField.setVisible(false); 
        }
        if(op_string.contains("REPLACE")){
            SymbolTextField.setVisible(true); 
        }else{
            SymbolTextField.setVisible(false); 
        }
        if(op_string.contains("HASH")){
            HashedStringTextField.setVisible(true); 
        }else{
            HashedStringTextField.setVisible(false); 
        }
        ParamPanel.revalidate();
        ParamPanel.repaint();
    }
    
    
    //Swaps artifact order in the list of artifacts and then redraws them
    void swapUpdate(String type, int rowIndex){
        //System.out.println("RowCOUNT(swap): " +dataUI.rowCount);
        dataUI.updateListofParams(uiParam.getPanelofParams());
        dataUI.swapParams(type, rowIndex);
        uiParam.loadUI();
    }
    
        //Field Getters
    public JTextField getParamIDTextField(){
        return ParamIDTextField;
    }
    public JTextField getFileTextField(){
        return FileNameTextField;
    }
    public JComboBox<ToolTipWrapper> getOperatorComboBox(){
        return OperationComboBox;
    }
    public JTextField getSymbolTextField(){
        return SymbolTextField;
    }
    public JTextField getHashedStringTextField(){
        return HashedStringTextField;
    }
    public JTextField getLowerBoundTextField(){
        return LowerBoundTextField;
    }
    public JTextField getUpperBoundTextField(){
        return UpperBoundTextField;
    }
    public JTextField getStepTextField(){
        return stepTextField;
    }
    public String getComments(){
        return this.comments;
    }
    //Field SETTERS
    private void setParamIDTextField(String v){
        ParamIDTextField.setText(v);
    }
    private void setFileTextField(String v){
        FileNameTextField.setText(v);
    }
    private void setSymbolTextField(String v){
        SymbolTextField.setText(v);
    }
    private void setHashedStringTextField(String v){
        HashedStringTextField.setText(v);
    }
    private void setLowerBoundTextField(String v){
        LowerBoundTextField.setText(v);
    }
    private void setUpperBoundTextField(String v){
        UpperBoundTextField.setText(v);
    }
    private void setStepTextField(String v){
        stepTextField.setText(v);
    }
    private void setOperatorComboBox(String v){
        ToolTipWrapper tip = ParamReferenceStorage.getWrapper(Operator_ITEMS, v);
        OperationComboBox.setSelectedItem(tip);
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton DocButton;
    private javax.swing.JButton DownButton;
    private javax.swing.JTextField FileNameTextField;
    private javax.swing.JTextField HashedStringTextField;
    private javax.swing.JTextField LowerBoundTextField;
    private javax.swing.JComboBox<ToolTipWrapper> OperationComboBox;
    private javax.swing.JTextField ParamIDTextField;
    private javax.swing.JPanel ParamPanel;
    private javax.swing.JButton ShowListButton;
    private javax.swing.JTextField SymbolTextField;
    private javax.swing.JButton UpButton;
    private javax.swing.JTextField UpperBoundTextField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField stepTextField;
    // End of variables declaration//GEN-END:variables
}
